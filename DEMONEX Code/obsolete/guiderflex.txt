if 0 then

        'Update the guide star coordinates to account for differential drift
        objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Determining guider drift")
        objImage.AttachToActiveImager
        objImage.ShowInventory
        X = objImage.InventoryArray(cdInventoryX)
        Y = objImage.InventoryArray(cdInventoryY)
        Magnitude    = objImage.InventoryArray(cdInventoryMagnitude)
        objClass     = objImage.InventoryArray(cdInventoryClass)
        FWHM         = objImage.InventoryArray(cdInventoryFWHM)
        MajorAxis    = objImage.InventoryArray(cdInventoryMajorAxis)
        MinorAxis    = objImage.InventoryArray(cdInventoryMinorAxis)
        Theta        = objImage.InventoryArray(cdInventoryTheta)
        Ellipticity  = objImage.InventoryArray(cdInventoryEllipticity)

        If NTaken = 0 Then
          'Finds the brightest star within 50 pixels of the edge for reference
          For i=0 to UBound(X) - 1
            If X(i) > 50 and X(i) < 1998 and Y(i) > 50 and Y(i) < 1998 and FWHM(i) > 1 and Ellipticity(i) < 1.5 Then
              RefX = X(i)
              RefY = Y(i)
              objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Reference Star found at (x,y) = (" &_
                RefX & "," & RefY & "); Magnitude = " & Magnitude(i) & ", Class = " & objClass(i) & ", FWHM = " &_
                FWHM(i) & ", MajorAxis = " & MajorAxis(i) & ", MinorAxis = " & MinorAxis(i) & ", Theta = " &_
                Theta(i) & ", Ellipticity = " & Ellipticity(i))
              RefStar = i
              Exit For
            End If
          Next
        Else 

          'Look through the 50 brightest stars for the closest matching the brightest in the reference frame
          if UBound(x) > RefStar + 25 Then 
            MaxStars = RefStar + 25
          Else
            MaxStars = UBound(X)
          End If
          If RefStar > 25 Then 
            MinStars = Refstar - 25
          Else 
            MinStars = 0
          End If

          Mindist = sqr(2)*2048
          For i=MinStars to MaxStars - 1
             dist = sqr((RefX - X(i))^2 + (RefY - Y(i))^2)
             If dist < mindist Then
               MinDist = dist
               Star = i
             End If
          Next

          objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Closest bright star matching reference star (" &_
                RefX & "," & RefY & ") found at (" & X(Star) & "," & Y(Star) & "); distance = " & MinDist)

if MinDist < 10 Then
          objCam.Autoguider = 1  
          newGuideStarX = objCam.GuideStarX + (refX - X(star))/4.11432846 'ratio of platescales
          newGuideStarY = objCam.GuideStarY + (refY - Y(star))/4.11432846 'ratio of platescales
          objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Moving guide star from " &_
            objCam.GuideStarX & "," & objCam.GuideStarY & " to " & newGuideStarX & "," & newGuideStarY)

          objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Abort Autoguiding to move star")
          StopGuiding = True
          objCam.GuideStarX = newGuideStarX 
          objCam.GuideStarY = newGuideStarY
          objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Resume Autoguiding")

StopGuiding = True
          objCam.Autoguide
          objEngFile.WriteLine("DoObject (" & FormatDateTime(Now,3) & "): Resumed Autoguiding")
          objCam.Autoguider = 0
  
End If

        End If
        objImage.close
end if